¿Cuáles son los mecanismos de interacción (I/O: Input/Output) que tiene el view.py con el
usuario? 
'''-Después de analizar el programa utilizado en el view.py, podemos ver que la interacción que se tiene con el usuario es la disposición del menú y 
la respuesta que esta esperando el programa por parte del usuario para que de esta manera se ejecute una de las 5 opciones que se le entrega al usuario en este programa.

¿Cómo se almacenan los datos de GoodReads en el model.py?
'''-Los datos de GoodReads se almacenan en el model.py principalmente por medio de la creacion de un diccionario al que se le llamó "catalog", donde se estan creando las estructura de datos donde se tiene planeado guardar la informacion. 
Posteriormente, cada valor del diccionario creado va a ser una lista, la cual se crea a partir de la funcion "lt.newlist", y, dependiendo del tipo de la estructura de datos, se especifica el tipo de lista, pues, por ejemplo la lista de authors se aclara que es 
una "ARRAY_LIST". Como complemento, se crean las respectivas funciones para almacenar en catalog la informacion respectiva, un ejemplo de esto es la funcion addBook, la cual añade al final de la lista cada libro cada vez que accede a ella. En conclusion, la base del 
almacenamiento de los datos se da gracias al diccionario catalog, no obstante, esta no tendria fin alguno sin las funciones que permiten acceder a cada uno de los datos. 

¿Cuáles son las funciones que comunican el view.py y el model.py?
'''-En primera instancia, es necesario aclarar que la importacion de la carpeta controller.py
es la principal fuente de conexion entre el view.py y el model.py, pues el controller y el model estan mayormente relacionados entre si y son los que permiten el funcionamiento del codigo que se genera en el view.py.
Asi pues, las funciones loaddata y initcatalog, son las que comunican el view.py y el model.py, pues estas acceden directamente al controller, el cual realiza el mismo proceso con el model y asi permite la ejecucion del resto del codigo que se presenta en el view.py. Asimismo, 
las condicionales que se presentan en el ciclo while permiten este mismo proceso de comunicacion al llamar a la funcion controller.py. 


¿Cómo se crea una lista?
'''-Lo primero que tenemos que hacer para poder crear una lista es importar DISClib.ADT, ya que se usará la función de creación de listas a partir de ese elemento importado. Después necesitaremos usar lt.newList ( lt es el apodo del elemento importado). 
Lo escrito previamente es lo principal para poder crear una lista, después se pueden añadir mas elementos como el “ARRAY LIST”, “SINGLE LINKED”, también cmpfunction, key, filename, delimiter, entre otras.

¿Qué hace el parámetro cmpfunction=None en la función newList()?
'''-La función cmpfunction, como su nombre en abreviatura lo indica, sirve para poder comparar elementos dentro de la lista. Ahora bien, existen dos opciones las cuales son, que la llave de la f tenga un valor o que tenga un None. Esto varia dependiendo si se esta dando una función de comparación o no. 
En este caso, como se pone None, significa que si se esta dando una función de comparación, pero si se diera un valor, significa que no esta dando esa función de comparación.

¿Qué hace la función addLast()?
'''-Lo que hace la función AddLast, es agregar a la ultima posición un elemento determinado lo que hace que halla una actualización del apuntador hacia la ultima posición y también esto hace que el tamaño de la lista se incremente en 1

¿Qué hace la función getElement()?
'''-Lo que hace la función de getElement es recibir una posición la cual tiene que ser menor que el tamaño de la lista y mayor a 0, y esta función retorna el elemento que esta en dicha posición.

¿Qué hace la función subList()?
'''-Lo que hace la función subList, como su nombre lo indica, es crear una sublista a partir de parámetros dados por el usuario. Estos parámetros son: la lista original de la cual se sacara la información, la posición en la cual va a comenzar la toma de datos y por ultimo, 
el numero de elementos que quieren ser copiados a partir de la lista original y de la posición inicial de colección de datos.

¿Observó algún cambio en el comportamiento del programa al cambiar la implementación del
parámetro “ARRAY_LIST” a “SINGLE_LINKED”?
'''-No se observo un cambio significativo en el comportamiento del programa, pues este corrio sin problema alguno. No obstante, tuvo un recorrido de tiempo menor al que estaba corriendo anteriormente. 